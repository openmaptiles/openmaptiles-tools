#!/usr/bin/env python
"""
This script generates a single SQL statement (either as an SQL function or as a prepared statement),
to generate a vector tile (MVT) for the given zoom and bounding box.

Usage:
  generate-sqltomvt <tileset> [--fname <name>] [--function | --prepared | --raw] [--mask-layer=<layer> --mask-level=<z>]
  generate-sqltomvt --help
  generate-sqltomvt --version

  <tileset>        Tileset definition yaml file

Options:
  -f --function          Generate function generation SQL [default]
  -p --prepared          Generate prepared statement SQL
  -r --raw               Generate raw qurey without any wrappers
  --mask-layer=<layer>   If tile only has this layer covering for the whole tile (e.g. 'water'),
                         and requested zoom is more than --mask-level parameter, returns empty result
  --mask-level=<z>       If --mask-layer is set, tiles will be checked for empty after given zoom [default: 8]
  --fname=<name>         Name of the generated function [default: gettile]
  --help                 Show this screen.
  --version              Show version.
"""
from __future__ import (absolute_import, division, print_function, unicode_literals)

from docopt import docopt
import sys

import openmaptiles
from openmaptiles.sqltomvt import generate_sqltomvt_preparer, generate_sqltomvt_func, generate_sqltomvt_raw

if __name__ == '__main__':
    args = docopt(__doc__, version=openmaptiles.__version__)
    opts = {
        'tileset': args['<tileset>'],
        'fname': args['--fname'],
        'mask-layer': args['--mask-layer'],
        'mask-level': int(args['--mask-level']),
    }

    if args['--prepared']:
        sql = generate_sqltomvt_preparer(opts)
    elif args['--raw']:
        sql = generate_sqltomvt_raw(opts)
    else:
        sql = generate_sqltomvt_func(opts)

    if sys.version_info >= (3, 0):
        print(sql)
    else:
        print(sql.encode("utf-8"))
