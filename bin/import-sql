#!/usr/bin/env bash
set -o errexit  # set -e
set -o pipefail
set -o nounset  # set -u
shopt -s nullglob

# For backward compatibility, allow both PG* and POSTGRES_* forms,
# with the non-standard POSTGRES_* form taking precedence.
# An error will be raised if neither form is given, except for the PGPORT
export PGHOST="${POSTGRES_HOST:-${PGHOST?}}"
export PGDATABASE="${POSTGRES_DB:-${PGDATABASE?}}"
export PGUSER="${POSTGRES_USER:-${PGUSER?}}"
export PGPASSWORD="${POSTGRES_PASSWORD:-${PGPASSWORD?}}"
export PGPORT="${POSTGRES_PORT:-${PGPORT:-5432}}"

PSQL="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/run-psql"


function import_all_sql_files() {
    local dir="$1"

    if [[ -d "$dir/parallel" ]]; then
      # Assume this dir may contain run_first.sql, parallel/*.sql, and run_last.sql
      # use parallel execution
      if [[ -f "$dir/run_first.sql" ]]; then
        "${PSQL}" "$dir/run_first.sql"
      else
        echo "File $dir/run_first.sql not found, skipping"
      fi

      # Run import-sql script in parallel, up to MAX_PARALLEL_PSQL processes at the same time
      "${PSQL}" --parallel "${MAX_PARALLEL_PSQL:=5}" "$dir/parallel"

      if [[ -f "$dir/run_last.sql" ]]; then
        "${PSQL}" "$dir/run_last.sql"
      else
        echo "File $dir/run_last.sql not found, skipping"
      fi
    else
      "${PSQL}" "$dir"
    fi
}

# If there are no arguments, imports everything,
# otherwise the first argument is the name of a file to be imported.
if [[ $# -eq 0 ]]; then
  if [[ "${SQL_TOOLS_DIR:-}" == "" ]] || [[ ! -d "${SQL_TOOLS_DIR}" ]]; then
    echo "ENV variable SQL_TOOLS_DIR is not set or there are no files. It should contain directory with .sql files, e.g. postgis-vt-util.sql and language.sql"
    exit 1
  else
    echo "SQL_TOOLS_DIR=$SQL_TOOLS_DIR"
  fi
  if [[ "${SQL_DIR:-}" == "" ]] || [[ ! -d "${SQL_DIR}" ]]; then
    echo "ENV variable SQL_DIR is not set or there are no files. It should contain directory with .sql files, e.g. tileset.sql, or run_first.sql, run_last.sql, and parallel/*.sql"
    exit 1
  else
    echo "SQL_DIR=$SQL_DIR"
  fi

  import_all_sql_files "$SQL_TOOLS_DIR"  # import postgis-vt-util.sql and all other tools SQL files from /sql
  import_all_sql_files "$SQL_DIR"  # import compiled tileset.sql
else
  "${PSQL}" "$1"
fi
