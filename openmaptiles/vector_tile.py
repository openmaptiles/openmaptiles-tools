# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: vector_tile.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class TileGeomType(betterproto.Enum):
    UNKNOWN = 0
    POINT = 1
    LINESTRING = 2
    POLYGON = 3


@dataclass
class Tile(betterproto.Message):
    layers: List["TileLayer"] = betterproto.message_field(3)


@dataclass
class TileValue(betterproto.Message):
    """
    Variant type encoding The use of values is described in section 4.1 of the
    specification
    """

    # Exactly one of these values must be present in a valid message
    string_val: str = betterproto.string_field(1, group="val")
    float_val: float = betterproto.float_field(2, group="val")
    double_val: float = betterproto.double_field(3, group="val")
    int_val: int = betterproto.int64_field(4, group="val")
    uint_val: int = betterproto.uint64_field(5, group="val")
    sint_val: int = betterproto.sint64_field(6, group="val")
    bool_val: bool = betterproto.bool_field(7, group="val")


@dataclass
class TileFeature(betterproto.Message):
    """Features are described in section 4.2 of the specification"""

    id: int = betterproto.uint64_field(1)
    # Tags of this feature are encoded as repeated pairs of integers. A detailed
    # description of tags is located in sections 4.2 and 4.4 of the specification
    tags: List[int] = betterproto.uint32_field(2)
    # The type of geometry stored in this feature.
    type: "TileGeomType" = betterproto.enum_field(3)
    # Contains a stream of commands and parameters (vertices). A detailed
    # description on geometry encoding is located in section 4.3 of the
    # specification.
    geometry: List[int] = betterproto.uint32_field(4)


@dataclass
class TileLayer(betterproto.Message):
    """Layers are described in section 4.1 of the specification"""

    # Any compliant implementation must first read the version number encoded in
    # this message and choose the correct implementation for this version number
    # before proceeding to decode other parts of this message.
    version: int = betterproto.uint32_field(15)
    name: str = betterproto.string_field(1)
    # The actual features in this tile.
    features: List["TileFeature"] = betterproto.message_field(2)
    # Dictionary encoding for keys
    keys: List[str] = betterproto.string_field(3)
    # Dictionary encoding for values
    values: List["TileValue"] = betterproto.message_field(4)
    # Although this is an "optional" field it is required by the specification.
    # See https://github.com/mapbox/vector-tile-spec/issues/47
    extent: int = betterproto.uint32_field(5)
